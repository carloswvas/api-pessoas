{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Pessoas",
    "version": "1.0.0",
    "description": "API para gerenciamento de pessoas (CRUD) com validação, tratamento de erros e documentação Swagger."
  },
  "servers": [
    {
      "url": "http://localhost:3333/api",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/pessoas": {
      "get": {
        "summary": "Listar todas as pessoas",
        "tags": ["Pessoas"],
        "responses": {
          "200": {
            "description": "Lista de pessoas retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Pessoa" }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "post": {
        "summary": "Cadastrar uma nova pessoa",
        "tags": ["Pessoas"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePessoa" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pessoa cadastrada com sucesso"
          },
          "400": {
            "description": "Campos obrigatórios inválidos"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/pessoas/{id}": {
      "get": {
        "summary": "Buscar pessoa por ID",
        "tags": ["Pessoas"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pessoa encontrada com sucesso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Pessoa" }
              }
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Pessoa não encontrada"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "put": {
        "summary": "Atualizar pessoa por ID",
        "tags": ["Pessoas"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePessoa" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pessoa atualizada com sucesso"
          },
          "400": {
            "description": "Campos inválidos ou ID incorreto"
          },
          "404": {
            "description": "Pessoa não encontrada"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "delete": {
        "summary": "Excluir pessoa por ID",
        "tags": ["Pessoas"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Pessoa excluída com sucesso"
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Pessoa não encontrada"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pessoa": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "nome": { "type": "string", "example": "João Silva" },
          "email": { "type": "string", "example": "joao@email.com" }
        }
      },
      "CreatePessoa": {
        "type": "object",
        "required": ["nome", "email", "senha"],
        "properties": {
          "nome": {
            "type": "string",
            "minLength": 3,
            "maxLength": 100,
            "example": "Maria Oliveira"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "maria@email.com"
          },
          "senha": {
            "type": "string",
            "minLength": 6,
            "maxLength": 100,
            "example": "minhasenha123"
          }
        }
      },
      "UpdatePessoa": {
        "type": "object",
        "required": ["nome", "email", "senha"],
        "properties": {
          "nome": {
            "type": "string",
            "example": "Carlos"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "carlos@email.com"
          },
          "senha": {
            "type": "string",
            "example": "novaSenha123"
          }
        }
      }
    }
  }
}
